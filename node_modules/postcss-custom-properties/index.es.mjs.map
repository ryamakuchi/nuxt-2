{"version":3,"file":"index.es.mjs","sources":["lib/get-custom-properties.js","lib/transform-value-ast.js","lib/transform-properties.js","lib/import-from.js","lib/export-to.js","index.js"],"sourcesContent":["import valueParser from 'postcss-values-parser';\n\n// return custom selectors from the css root, conditionally removing them\nexport default function getCustomProperties(root, opts) {\n\t// initialize custom selectors\n\tconst customPropertiesFromHtmlElement = {};\n\tconst customPropertiesFromRootPsuedo = {};\n\n\t// for each html or :root rule\n\troot.nodes.slice().forEach(rule => {\n\t\tconst customPropertiesObject = isHtmlRule(rule)\n\t\t\t? customPropertiesFromHtmlElement\n\t\t: isRootRule(rule)\n\t\t\t? customPropertiesFromRootPsuedo\n\t\t: null;\n\n\t\t// for each custom property\n\t\tif (customPropertiesObject) {\n\t\t\trule.nodes.slice().forEach(decl => {\n\t\t\t\tif (isCustomDecl(decl)) {\n\t\t\t\t\tconst { prop } = decl;\n\n\t\t\t\t\t// write the parsed value to the custom property\n\t\t\t\t\tcustomPropertiesObject[prop] = valueParser(decl.value).parse().nodes;\n\n\t\t\t\t\t// conditionally remove the custom property declaration\n\t\t\t\t\tif (!opts.preserve) {\n\t\t\t\t\t\tdecl.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// conditionally remove the empty html or :root rule\n\t\t\tif (!opts.preserve && isEmptyParent(rule)) {\n\t\t\t\trule.remove();\n\t\t\t}\n\t\t}\n\t});\n\n\t// return all custom properties, preferring :root properties over html properties\n\treturn { ...customPropertiesFromHtmlElement, ...customPropertiesFromRootPsuedo };\n}\n\n// match html and :root rules\nconst htmlSelectorRegExp = /^html$/i;\nconst rootSelectorRegExp = /^:root$/i;\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n// whether the node is an html or :root rule\nconst isHtmlRule = node => node.type === 'rule' && htmlSelectorRegExp.test(node.selector) && Object(node.nodes).length;\nconst isRootRule = node => node.type === 'rule' && rootSelectorRegExp.test(node.selector) && Object(node.nodes).length;\n\n// whether the node is an custom property\nconst isCustomDecl = node => node.type === 'decl' && customPropertyRegExp.test(node.prop);\n\n// whether the node is a parent without children\nconst isEmptyParent = node => Object(node.nodes).length === 0;\n","export default function transformValueAST(root, customProperties) {\n\tif (root.nodes && root.nodes.length) {\n\t\troot.nodes.slice().forEach(child => {\n\t\t\tif (isVarFunction(child)) {\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tconst [propertyNode, comma, ...fallbacks] = child.nodes.slice(1, -1);\n\t\t\t\tconst { value: name } = propertyNode;\n\n\t\t\t\tif (name in customProperties) {\n\t\t\t\t\t// conditionally replace a known custom property\n\t\t\t\t\tchild.replaceWith(...asClonedArrayWithBeforeSpacing(customProperties[name], child.raws.before));\n\n\t\t\t\t\tretransformValueAST(root, customProperties, name);\n\t\t\t\t} else if (fallbacks.length) {\n\t\t\t\t\t// conditionally replace a custom property with a fallback\n\t\t\t\t\tchild.replaceWith(...asClonedArrayWithBeforeSpacing(fallbacks, child.raws.before));\n\n\t\t\t\t\ttransformValueAST(root, customProperties);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttransformValueAST(child, customProperties);\n\t\t\t}\n\t\t})\n\t}\n\n\treturn root;\n}\n\n// retransform the current ast without a custom property (to prevent recursion)\nfunction retransformValueAST(root, customProperties, withoutProperty) {\n\tconst nextCustomProperties = Object.assign({}, customProperties);\n\n\tdelete nextCustomProperties[withoutProperty];\n\n\treturn transformValueAST(root, nextCustomProperties);\n}\n\n// match var() functions\nconst varRegExp = /^var$/i;\n\n// whether the node is a var() function\nconst isVarFunction = node => node.type === 'func' && varRegExp.test(node.value) && Object(node.nodes).length > 0;\n\n// return an array with its nodes cloned, preserving the raw\nconst asClonedArrayWithBeforeSpacing = (array, beforeSpacing) => {\n\tconst clonedArray = asClonedArray(array, null);\n\n\tif (clonedArray[0]) {\n\t\tclonedArray[0].raws.before = beforeSpacing;\n\t}\n\n\treturn clonedArray;\n};\n\n// return an array with its nodes cloned\nconst asClonedArray = (array, parent) => array.map(node => asClonedNode(node, parent));\n\n// return a cloned node\nconst asClonedNode = (node, parent) => {\n\tconst cloneNode = new node.constructor(node);\n\n\tfor (const key in node) {\n\t\tif (key === 'parent') {\n\t\t\tcloneNode.parent = parent;\n\t\t} else if (Object(node[key]).constructor === Array) {\n\t\t\tcloneNode[key] = asClonedArray(node.nodes, cloneNode);\n\t\t} else if (Object(node[key]).constructor === Object) {\n\t\t\tcloneNode[key] = Object.assign({}, node[key]);\n\t\t}\n\t}\n\n\treturn cloneNode;\n};\n","import valueParser from 'postcss-values-parser';\nimport transformValueAST from './transform-value-ast';\n\n// transform custom pseudo selectors with custom selectors\nexport default (root, customProperties, opts) => {\n\t// walk decls that can be transformed\n\troot.walkDecls(decl => {\n\t\tif (isTransformableDecl(decl)) {\n\t\t\tconst originalValue = decl.value;\n\t\t\tconst valueAST = valueParser(originalValue).parse();\n\t\t\tconst value = String(transformValueAST(valueAST, customProperties));\n\n\t\t\t// conditionally transform values that have changed\n\t\t\tif (value !== originalValue) {\n\t\t\t\tif (opts.preserve) {\n\t\t\t\t\tdecl.cloneBefore({ value });\n\t\t\t\t} else {\n\t\t\t\t\tdecl.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\n// match html and :root rules\nconst htmlOrRootSelectorRegExp = /^(html|:root)$/i;\n\n// match custom property inclusions\nconst customPropertiesRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/;\n\n// whether the declaration has a parent rule that is either html or :root\nconst isDeclChildOfHtmlOrRootRule = decl => Object(decl.parent).type === 'rule' && htmlOrRootSelectorRegExp.test(decl.parent.selector);\n\n// whether the declaration should be potentially transformed\nconst isTransformableDecl = decl => customPropertiesRegExp.test(decl.value) && !isDeclChildOfHtmlOrRootRule(decl);\n","import fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport valueParser from 'postcss-values-parser';\nimport getCustomProperties from './get-custom-properties';\n\n/* Import Custom Properties from CSS AST\n/* ========================================================================== */\n\nfunction importCustomPropertiesFromCSSAST(root) {\n\treturn getCustomProperties(root, { preserve: true });\n}\n\n/* Import Custom Properties from CSS File\n/* ========================================================================== */\n\nasync function importCustomPropertiesFromCSSFile(from) {\n\tconst css = await readFile(path.resolve(from));\n\tconst root = postcss.parse(css, { from: path.resolve(from) });\n\n\treturn importCustomPropertiesFromCSSAST(root);\n}\n\n/* Import Custom Properties from Object\n/* ========================================================================== */\n\nfunction importCustomPropertiesFromObject(object) {\n\tconst customProperties = Object.assign(\n\t\t{},\n\t\tObject(object).customProperties || Object(object)['custom-properties']\n\t);\n\n\tfor (const key in customProperties) {\n\t\tcustomProperties[key] = valueParser(customProperties[key]).parse().nodes;\n\t}\n\n\treturn customProperties;\n}\n\n/* Import Custom Properties from JSON file\n/* ========================================================================== */\n\nasync function importCustomPropertiesFromJSONFile(from) {\n\tconst object = await readJSON(path.resolve(from));\n\n\treturn importCustomPropertiesFromObject(object);\n}\n\n/* Import Custom Properties from JS file\n/* ========================================================================== */\n\nasync function importCustomPropertiesFromJSFile(from) {\n\tconst object = await import(path.resolve(from));\n\n\treturn importCustomPropertiesFromObject(object);\n}\n\n/* Import Custom Properties from Sources\n/* ========================================================================== */\n\nexport default function importCustomPropertiesFromSources(sources) {\n\treturn sources.map(source => {\n\t\tif (source instanceof Promise) {\n\t\t\treturn source;\n\t\t} else if (source instanceof Function) {\n\t\t\treturn source();\n\t\t}\n\n\t\t// read the source as an object\n\t\tconst opts = source === Object(source) ? source : { from: String(source) };\n\n\t\t// skip objects with Custom Properties\n\t\tif (opts.customProperties || opts['custom-properties']) {\n\t\t\treturn opts\n\t\t}\n\n\t\t// source pathname\n\t\tconst from = String(opts.from || '');\n\n\t\t// type of file being read from\n\t\tconst type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n\n\t\treturn { type, from };\n\t}).reduce(async (customProperties, source) => {\n\t\tconst { type, from } = await source;\n\n\t\tif (type === 'ast') {\n\t\t\treturn Object.assign(await customProperties, importCustomPropertiesFromCSSAST(from));\n\t\t}\n\n\t\tif (type === 'css') {\n\t\t\treturn Object.assign(await customProperties, await importCustomPropertiesFromCSSFile(from));\n\t\t}\n\n\t\tif (type === 'js') {\n\t\t\treturn Object.assign(await customProperties, await importCustomPropertiesFromJSFile(from));\n\t\t}\n\n\t\tif (type === 'json') {\n\t\t\treturn Object.assign(await customProperties, await importCustomPropertiesFromJSONFile(from));\n\t\t}\n\n\t\treturn Object.assign(await customProperties, await importCustomPropertiesFromObject(await source));\n\t}, {});\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n\tfs.readFile(from, 'utf8', (error, result) => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n});\n\nconst readJSON = async from => JSON.parse(await readFile(from));\n","import fs from 'fs';\nimport path from 'path';\n\n/* Export Custom Properties to CSS File\n/* ========================================================================== */\n\nasync function exportCustomPropertiesToCssFile(to, customProperties) {\n\tconst cssContent = Object.keys(customProperties).reduce((cssLines, name) => {\n\t\tcssLines.push(`\\t${name}: ${customProperties[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `:root {\\n${cssContent}\\n}\\n`;\n\n\tawait writeFile(to, css);\n}\n\n/* Export Custom Properties to JSON file\n/* ========================================================================== */\n\nasync function exportCustomPropertiesToJsonFile(to, customProperties) {\n\tconst jsonContent = JSON.stringify({\n\t\t'custom-properties': customProperties\n\t}, null, '  ');\n\tconst json = `${jsonContent}\\n`;\n\n\tawait writeFile(to, json);\n}\n\n/* Export Custom Properties to Common JS file\n/* ========================================================================== */\n\nasync function exportCustomPropertiesToCjsFile(to, customProperties) {\n\tconst jsContents = Object.keys(customProperties).reduce((jsLines, name) => {\n\t\tjsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn jsLines;\n\t}, []).join(',\\n');\n\tconst js = `module.exports = {\\n\\tcustomProperties: {\\n${jsContents}\\n\\t}\\n};\\n`;\n\n\tawait writeFile(to, js);\n}\n\n/* Export Custom Properties to Module JS file\n/* ========================================================================== */\n\nasync function exportCustomPropertiesToMjsFile(to, customProperties) {\n\tconst mjsContents = Object.keys(customProperties).reduce((mjsLines, name) => {\n\t\tmjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn mjsLines;\n\t}, []).join(',\\n');\n\tconst mjs = `export const customProperties = {\\n${mjsContents}\\n};\\n`;\n\n\tawait writeFile(to, mjs);\n}\n\n/* Export Custom Properties to Destinations\n/* ========================================================================== */\n\nexport default function exportCustomPropertiesToDestinations(customProperties, destinations) {\n\treturn Promise.all(destinations.map(async destination => {\n\t\tif (destination instanceof Function) {\n\t\t\tawait destination(defaultCustomPropertiesToJSON(customProperties));\n\t\t} else {\n\t\t\t// read the destination as an object\n\t\t\tconst opts = destination === Object(destination) ? destination : { to: String(destination) };\n\n\t\t\t// transformer for Custom Properties into a JSON-compatible object\n\t\t\tconst toJSON = opts.toJSON || defaultCustomPropertiesToJSON;\n\n\t\t\tif ('customProperties' in opts) {\n\t\t\t\t// write directly to an object as customProperties\n\t\t\t\topts.customProperties = toJSON(customProperties);\n\t\t\t} else if ('custom-properties' in opts) {\n\t\t\t\t// write directly to an object as custom-properties\n\t\t\t\topts['custom-properties'] = toJSON(customProperties);\n\t\t\t} else {\n\t\t\t\t// destination pathname\n\t\t\t\tconst to = String(opts.to || '');\n\n\t\t\t\t// type of file being written to\n\t\t\t\tconst type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase();\n\n\t\t\t\t// transformed Custom Properties\n\t\t\t\tconst customPropertiesJSON = toJSON(customProperties);\n\n\t\t\t\tif (type === 'css') {\n\t\t\t\t\tawait exportCustomPropertiesToCssFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'js') {\n\t\t\t\t\tawait exportCustomPropertiesToCjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tawait exportCustomPropertiesToJsonFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'mjs') {\n\t\t\t\t\tawait exportCustomPropertiesToMjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst defaultCustomPropertiesToJSON = customProperties => {\n\treturn Object.keys(customProperties).reduce((customPropertiesJSON, key) => {\n\t\tcustomPropertiesJSON[key] = String(customProperties[key]);\n\n\t\treturn customPropertiesJSON;\n\t}, {});\n};\n\nconst writeFile = (to, text) => new Promise((resolve, reject) => {\n\tfs.writeFile(to, text, error => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve();\n\t\t}\n\t});\n});\n\nconst escapeForJS = string => string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n","import postcss from 'postcss';\nimport getCustomProperties from './lib/get-custom-properties';\nimport transformProperties from './lib/transform-properties';\nimport importCustomPropertiesFromSources from './lib/import-from';\nimport exportCustomPropertiesToDestinations from './lib/export-to';\n\nexport default postcss.plugin('postcss-custom-properties', opts => {\n\t// whether to preserve custom selectors and rules using them\n\tconst preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : true;\n\n\t// sources to import custom selectors from\n\tconst importFrom = [].concat(Object(opts).importFrom || []);\n\n\t// destinations to export custom selectors to\n\tconst exportTo = [].concat(Object(opts).exportTo || []);\n\n\t// promise any custom selectors are imported\n\tconst customPropertiesPromise = importCustomPropertiesFromSources(importFrom);\n\n\treturn async root => {\n\t\tconst customProperties = Object.assign(\n\t\t\tawait customPropertiesPromise,\n\t\t\tgetCustomProperties(root, { preserve })\n\t\t);\n\n\t\tawait exportCustomPropertiesToDestinations(customProperties, exportTo);\n\n\t\ttransformProperties(root, customProperties, { preserve });\n\t};\n});\n"],"names":["getCustomProperties","root","opts","customPropertiesFromHtmlElement","customPropertiesFromRootPsuedo","nodes","slice","forEach","rule","customPropertiesObject","isHtmlRule","isRootRule","decl","isCustomDecl","prop","valueParser","value","parse","preserve","remove","isEmptyParent","htmlSelectorRegExp","rootSelectorRegExp","customPropertyRegExp","node","type","test","selector","Object","length","transformValueAST","customProperties","child","isVarFunction","propertyNode","comma","fallbacks","name","replaceWith","asClonedArrayWithBeforeSpacing","raws","before","retransformValueAST","withoutProperty","nextCustomProperties","assign","varRegExp","array","beforeSpacing","clonedArray","asClonedArray","parent","map","asClonedNode","cloneNode","constructor","key","Array","walkDecls","isTransformableDecl","originalValue","valueAST","String","cloneBefore","htmlOrRootSelectorRegExp","customPropertiesRegExp","isDeclChildOfHtmlOrRootRule","importCustomPropertiesFromCSSAST","importCustomPropertiesFromCSSFile","from","css","readFile","path","resolve","postcss","importCustomPropertiesFromObject","object","importCustomPropertiesFromJSONFile","readJSON","importCustomPropertiesFromJSFile","importCustomPropertiesFromSources","sources","source","Promise","Function","extname","toLowerCase","reduce","reject","fs","error","result","JSON","exportCustomPropertiesToCssFile","to","cssContent","keys","cssLines","push","join","writeFile","exportCustomPropertiesToJsonFile","jsonContent","stringify","json","exportCustomPropertiesToCjsFile","jsContents","jsLines","escapeForJS","js","exportCustomPropertiesToMjsFile","mjsContents","mjsLines","mjs","exportCustomPropertiesToDestinations","destinations","all","destination","defaultCustomPropertiesToJSON","toJSON","customPropertiesJSON","text","string","replace","plugin","Boolean","importFrom","concat","exportTo","customPropertiesPromise","transformProperties"],"mappings":"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"}